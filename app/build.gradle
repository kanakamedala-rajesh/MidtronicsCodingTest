apply plugin: 'com.android.application'
apply plugin: 'maven-publish'

android {
    compileSdkVersion versions.compileSdk
    defaultConfig {
        applicationId names.applicationId
        minSdkVersion versions.minSdk
        targetSdkVersion versions.targerSdk
        versionCode versions.versionCode
        versionName names.versionName
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "androidx.appcompat:appcompat:$versions.appcompat"
    implementation "com.google.android.material:material:$versions.androidMaterial"
    implementation "androidx.constraintlayout:constraintlayout:$versions.constraintLayout"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$versions.coordinator_layout"
    implementation "com.google.dagger:dagger:$versions.dagger"
    implementation "com.google.dagger:dagger-android-support:$versions.dagger"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    annotationProcessor "com.google.dagger:dagger-android-processor:$versions.dagger"
    annotationProcessor "com.google.dagger:dagger-compiler:$versions.dagger"

    implementation "io.reactivex:rxjava:$versions.rxJava"
    implementation "io.reactivex:rxandroid:$versions.rxAndroid"

    implementation "com.squareup.retrofit2:retrofit:$versions.retrofit"

    implementation "com.squareup.okhttp3:okhttp:$versions.okhttp"
    implementation "com.squareup.okio:okio:$versions.okio"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.logging_interceptor"
    implementation "com.google.code.gson:gson:$versions.gson"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofitGsonConverter"
    implementation "com.squareup.retrofit2:adapter-rxjava:$versions.rxJavaAdapter"

    implementation "org.apache.commons:commons-lang3:$versions.commons_lang"

    testImplementation "junit:junit:$versions.junit"

    androidTestImplementation "androidx.test:runner:$versions.testRunner"
    androidTestImplementation "androidx.test.espresso:espresso-core:$versions.espresso"
}


def githubProperties = new Properties()
/**
 * Create github.properties in root project folder file with
 * gpr.usr=GITHUB_USER_ID & gpr.key=PERSONAL_ACCESS_TOKEN
 * Set env variable GPR_USER & GPR_API_KEY if not adding a properties file
 *
 * **/
githubProperties.setProperty("gpr.usr", System.getenv("GPR_USER"))
githubProperties.setProperty("gpr.key", System.getenv("GPR_API_KEY"))

def getVersionName = { ->
    return names.versionName
}

def getGroupId = { ->
    return names.applicationId
}

def getArtifactId = { ->
    return name
}

publishing {
    publications {
        MidtronicsCodingTest(MavenPublication) {
            groupId getGroupId()
            artifactId getArtifactId()
            version getVersionName()
            artifact("$buildDir/outputs/apk/debug/${getArtifactId()}-debug.apk")
        }
    }

    repositories {
        maven {
            name = "GitHubPackages"
            url = uri("https://maven.pkg.github.com/kanakamedala-rajesh/MidtronicsCodingTest")
            credentials {
                username = githubProperties['gpr.usr']
                password = githubProperties['gpr.key']
            }
        }
    }
}
